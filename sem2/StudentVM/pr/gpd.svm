        ldc 101;   memory struct in this program
        st  0;       0   1    2  3   4    5    6   7  ...
        ld  0;      [n][ans][cp][i][fpi][lpi][p1][p2][...]
        st  1; ld pre-answer as n
        ld  0;
        ldc 2;
        mod
        br odd
        ldc 2
        st  1
odd:
        ldc 1;
        st  2; set pre-value of current prime
        ldc 0
        st  3; init i as 0
        ldc 6
        st  4; set fpi - first prime index
        ldc 6
        st  5; set lpi - last prime index
        ldc 2
        st  6; ---------- end of initialization ----------
search:
        ld  5; ld lpi
        ldi  ;
        ldc 2
        mul
        ld  0
        cmp
        ldc 1
        cmp  ; if (2 * p[lpi] > n - 1) -> return result (answer)
        br  tryNextNum
        jmp end
tryNextNum:
        ld 2
        ldc 2
        add
        st  2
        ld  4
        ldc 3
        sti
nextDivider:
        ld  3
        ld  5
        cmp
        ldc 1
        cmp
        br  continue1
        jmp foundPrime
continue1:
        ld  2
        ld  3
        ldi
        mod
        br  incIterator
        jmp tryNextNum
incIterator:
        ld  3
        ldc 1
        add
        st  3
        jmp nextDivider
foundPrime:
        ld  5
        ldc 1
        add
        st  5
        ld  2
        ld  5
        sti
        ld  0;
        ld  2;
        mod
        br search
        ld  2;
        st  1;
        jmp search
end:
        ld 1
        hlt
