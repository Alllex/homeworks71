        ldc 500; load n
        st  0;      save in 0
        ldc 1;      load current prime
        st  1
        ldc 0
        st  2
        ldc 4
        st  3
        ldc 2
        st  4
search:
        ld  0
        ldc 1
        sub
        st  0
        ld  0
        br  tryNextNum
        jmp end
tryNextNum:
        ld  1
        ldc 2
        add
        st  1
        ldc 4
        st  2
nextDivider:
        ld  2
        ld  3
        cmp
        ldc 1
        cmp
        br  continue1
        jmp foundPrime
continue1:
        ld  2
        ldi
        dup
        mul
        ld  1
        cmp
        ldc 1
        cmp
        br  continue2
        jmp foundPrime
continue2:
        ld  1
        ld  2
        ldi
        mod
        br  incIterator
        jmp tryNextNum
incIterator:
        ld 2
        ldc 1
        add
        st 2
        jmp nextDivider
foundPrime:
        ld  3
        ldc 1
        add
        st  3
        ld  1
        ld  3
        sti
        jmp search
end:
        ld 3
        ldi
        hlt
